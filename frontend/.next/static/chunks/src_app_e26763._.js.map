{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://W%3A/CODE_EVERYTHING/PROJ/RAG-basic-deploy-FastNext/frontend/src/app/home/page.tsx"],"sourcesContent":["'use client'\r\n\r\nimport { useState, useEffect } from 'react'\r\nimport useSWR from 'swr'\r\n\r\nimport Spinner from '@/components/spinner'\r\n\r\n\r\nconst fetcher = (url: string) => fetch(url).then((r) => r.json())\r\n\r\nexport default function HomePage() {\r\n    const [msg, setMsg] = useState<string | undefined>(\"Loading...\");\r\n    const [file, setFile] = useState<File | null>(null);\r\n    const [message, setMessage] = useState<string>(\"\");\r\n    const [loading, setLoading] = useState<boolean>(false);\r\n\r\n    const { data, error, isLoading } = useSWR(\r\n        'http://localhost:8000',\r\n        fetcher\r\n    )\r\n\r\n    useEffect(() => {\r\n        if (isLoading) {\r\n            setMsg(\"Loading...\");\r\n        } else if (error) {\r\n            setMsg(`Error: ${error.message}`);\r\n        } else if (data) {\r\n            setMsg(data.message);\r\n        }\r\n    }, [isLoading, error, data]);\r\n\r\n    const handleFileChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        if (event.target.files && event.target.files.length > 0) {\r\n            setFile(event.target.files[0]);\r\n        }\r\n    };\r\n\r\n    const handleUpload = async () => {\r\n        if (!file) {\r\n            alert(\"Please select a file\");\r\n            return;\r\n        }\r\n\r\n        const formData = new FormData();\r\n        formData.append(\"file\", file);\r\n\r\n        try {\r\n            const response = await fetch(\"http://localhost:8000/api/indexing\", {\r\n                method: \"POST\",\r\n                body: formData,\r\n            });\r\n\r\n            if (response.ok) {\r\n                // const data = await response.json(); // Parse JSON response\r\n                alert(\"Indexing succesffully!\")\r\n                // setMessage(data.message); // Display success message\r\n            } else {\r\n                setMessage(\"Failed to upload file.\");\r\n            }\r\n        } catch (error) {\r\n            setMessage(\"An error occurred during upload.\");\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className='mt-5 text-2xl text-yellow-400'>\r\n            <h1>Upload PDF</h1>\r\n            <p className=\"text-center\">{msg}</p>\r\n            <div className=\"my-10 flex flex-col items-center justify-center gap-4 bg-gray-100 p-8 rounded-lg shadow-md max-w-lg mx-auto\">\r\n                <input\r\n                    type=\"file\"\r\n                    accept=\"application/pdf\"\r\n                    onChange={handleFileChange}\r\n                    className=\"block w-full text-sm text-gray-500 \r\n                        file:mr-4 file:py-2 file:px-4\r\n                        file:rounded-lg file:border-0\r\n                        file:text-sm file:font-semibold\r\n                        file:bg-blue-50 file:text-blue-700\r\n                        hover:file:bg-blue-100\r\n                        focus:outline-none\"\r\n                />\r\n                <button\r\n                    onClick={handleUpload}\r\n                    className=\"bg-blue-600 text-white font-bold py-2 px-6 rounded-lg shadow hover:bg-blue-700 transition duration-200 focus:outline-none focus:ring-2 focus:ring-blue-400 focus:ring-offset-2\"\r\n                >\r\n                    Indexing\r\n                </button>\r\n                {message && (\r\n                    <p className=\"mt-4 text-center text-gray-600 font-medium\">{message}</p>\r\n                )}\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}"],"names":[],"mappings":";;;;AAEA;AACA;;;AAHA;;;AAQA,MAAM,UAAU,CAAC,MAAgB,MAAM,KAAK,IAAI,CAAC,CAAC,IAAM,EAAE,IAAI;AAE/C,SAAS;;IACpB,MAAM,CAAC,KAAK,OAAO,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAsB;IACnD,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAe;IAC9C,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAU;IAC/C,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAW;IAEhD,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,SAAS,EAAE,GAAG,CAAA,GAAA,iKAAA,CAAA,UAAM,AAAD,EACpC,yBACA;IAGJ,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;8BAAE;YACN,IAAI,WAAW;gBACX,OAAO;YACX,OAAO,IAAI,OAAO;gBACd,OAAO,CAAC,OAAO,EAAE,MAAM,OAAO,EAAE;YACpC,OAAO,IAAI,MAAM;gBACb,OAAO,KAAK,OAAO;YACvB;QACJ;6BAAG;QAAC;QAAW;QAAO;KAAK;IAE3B,MAAM,mBAAmB,CAAC;QACtB,IAAI,MAAM,MAAM,CAAC,KAAK,IAAI,MAAM,MAAM,CAAC,KAAK,CAAC,MAAM,GAAG,GAAG;YACrD,QAAQ,MAAM,MAAM,CAAC,KAAK,CAAC,EAAE;QACjC;IACJ;IAEA,MAAM,eAAe;QACjB,IAAI,CAAC,MAAM;YACP,MAAM;YACN;QACJ;QAEA,MAAM,WAAW,IAAI;QACrB,SAAS,MAAM,CAAC,QAAQ;QAExB,IAAI;YACA,MAAM,WAAW,MAAM,MAAM,sCAAsC;gBAC/D,QAAQ;gBACR,MAAM;YACV;YAEA,IAAI,SAAS,EAAE,EAAE;gBACb,6DAA6D;gBAC7D,MAAM;YACN,uDAAuD;YAC3D,OAAO;gBACH,WAAW;YACf;QACJ,EAAE,OAAO,OAAO;YACZ,WAAW;QACf;IACJ;IAEA,qBACI,6LAAC;QAAI,WAAU;;0BACX,6LAAC;0BAAG;;;;;;0BACJ,6LAAC;gBAAE,WAAU;0BAAe;;;;;;0BAC5B,6LAAC;gBAAI,WAAU;;kCACX,6LAAC;wBACG,MAAK;wBACL,QAAO;wBACP,UAAU;wBACV,WAAU;;;;;;kCAQd,6LAAC;wBACG,SAAS;wBACT,WAAU;kCACb;;;;;;oBAGA,yBACG,6LAAC;wBAAE,WAAU;kCAA8C;;;;;;;;;;;;;;;;;;AAM/E;GApFwB;;QAMe,iKAAA,CAAA,UAAM;;;KANrB"}},
    {"offset": {"line": 141, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}